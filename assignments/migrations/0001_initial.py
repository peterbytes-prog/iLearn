# Generated by Django 3.2.8 on 2021-12-11 11:11

import ckeditor.fields
import courses.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('overview', models.TextField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('weight', models.DecimalField(decimal_places=3, max_digits=5)),
                ('opens', models.DateTimeField(blank=True, help_text='YYYY-MM-DD HH:MM:SS', null=True)),
                ('closes', models.DateTimeField(blank=True, help_text='YYYY-MM-DD HH:MM:SS', null=True)),
                ('time_limit', models.DurationField(default=datetime.timedelta(seconds=3600), help_text='hh:mm:ss')),
            ],
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assignments.assignment')),
            ],
            options={
                'ordering': ['-created'],
                'get_latest_by': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', courses.fields.OrderField(blank=True)),
                ('question', ckeditor.fields.RichTextField()),
                ('multiple', models.BooleanField(default=False, help_text='allow selecting multiple choices?')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_questions', to='assignments.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='TextChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.CharField(blank=True, max_length=5)),
                ('point', models.DecimalField(decimal_places=2, max_digits=4)),
                ('content', ckeditor.fields.RichTextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_choices', to='assignments.question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ('TextChoice',)}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='AttemptChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assignments.attempt')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assignments.textchoice')),
            ],
        ),
        migrations.AddField(
            model_name='attempt',
            name='choice',
            field=models.ManyToManyField(through='assignments.AttemptChoice', to='assignments.TextChoice'),
        ),
    ]
